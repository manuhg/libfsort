cmake_minimum_required(VERSION 2.8)
project(libfsort)

function (list_to_str result delim)
    list(GET ARGV 2 temp)
    math(EXPR N "${ARGC}-1")
    foreach(IDX RANGE 3 ${N})
        list(GET ARGV ${IDX} STR)
        set(temp "${temp}${delim}${STR}")
    endforeach()
    set(${result} "${temp}" PARENT_SCOPE)
endfunction(list_to_str)

#set(Caffe_DIR ../caffe/share/Caffe)
#set(Caffe_DIR ${CMAKE_SOURCE_DIR}/../caffe/cmake_build)
find_package(Caffe REQUIRED)
#find_package(OpenCV REQUIRED)

include_directories(${Caffe_DIR}/include)
add_definitions(${Caffe_DEFINITIONS})

#include_directories(/home/gk1000/dev/libfsort/include /usr/include /usr/local/include)
include_directories(${CMAKE_SOURCE_DIR}/../include /usr/include /usr/local/include)
include_directories(${Caffe_INCLUDE_DIRS})

link_directories(../lib /usr/lib /usr/local/lib /usr/lib/openmpi)

message(STATUS "src dir: " ${CMAKE_SOURCE_DIR})
message(STATUS "includes: " ${Caffe_INCLUDE_DIRS})
message(STATUS "libs:" ${Caffe_LIBRARIES})

set(LIBS bhtsne mpi)
#set(LIBS bhtsne pthread m  boost_system boost_thread glog lmdb cblas hdf5_hl leveldb gflags protobuf hdf5 caffe boost_filesystem caffeproto )
set(BUILD_LIB ON)
option(BUILD_EXECUTABLE OFF)
option(OPTIMIZATION_FLAGS OFF)
option(ALL_STATIC OFF)

file(GLOB INCLUDES *.h)
message(STATUS "Header files: " ${INCLUDES})

file(GLOB CPP_FILES *.cpp)
file(GLOB MAIN_CPP *main.cpp)


if(ALL_STATIC)
 OBSET(CMAKE_FIND_LIBRARY_SUFFIXES ".a")
 SET(BUILD_SHARED_LIBRARIES OFF)
 SET(CMAKE_EXE_LINKER_FLAGS "-static")
 link_libraries("-static")
endif()


if(BUILD_LIB)
 message(STATUS "\n===============================================")
 message(STATUS "Building config for libfsort.a")
 list(REMOVE_ITEM CPP_FILES ${MAIN_CPP})
 list_to_str(src_files "\n => "  ${CPP_FILES})
 message(STATUS "Source files:\n => " ${src_files} )
 add_library(fsort STATIC ${CPP_FILES})
 target_link_libraries(fsort ${Caffe_LIBRARIES} ${LIBS} )
 message(STATUS "Done building config for libfsort.a")
 message(STATUS "\n===============================================")
endif()

if(BUILD_EXECUTABLE)
 message(STATUS "\n===============================================")
 message(STATUS "Building config for fsort_ex")
 file(GLOB CPP_FILES *.cpp)
 list_to_str(src_files "\n => "  ${CPP_FILES})
 message(STATUS "Source files:\n => " ${src_files} )
 message(STATUS "Main:\n => " ${MAIN_CPP})
 add_executable(fsort_ex ${CPP_FILES} ${INCLUDES})
 target_link_libraries(fsort_ex ${Caffe_LIBRARIES} ${LIBS})
 message(STATUS "Done building config for fsort_ex")
 message(STATUS "\n===============================================")
endif()
